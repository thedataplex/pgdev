import "dart:async";
import "dart:io";
import 'dart:typed_data';
import 'dart:ui' as ui;
import "package:flutter/material.dart";
import "package:torch_controller/torch_controller.dart";
import "package:geolocator/geolocator.dart";
import "actions.dart";
import 'package:image_picker/image_picker.dart';
import 'package:video_player/video_player.dart';
import 'package:camera/camera.dart';
import 'package:image/image.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:flutter_blue_plus/flutter_blue_plus.dart';
import 'package:path_provider/path_provider.dart';
import 'package:image_gallery_saver/image_gallery_saver.dart';

int rcbcnt = 0;
int fcbcnt = 0;

void processRearCameraButton(BuildContext context)
{
	rcbcnt = rcbcnt + 1;
	print("RearCameraButton Pressed [$rcbcnt] Times");
	//_showcontent(context);
}

void cam() async
{
	final ImagePicker picker = ImagePicker();
	final photo = await picker.pickImage(source: ImageSource.camera);
	print(photo?.path);
	final path = photo?.path.toString();
	ImageGallerySaver.saveFile(path.toString());
	print("cam");
}

void captureImageFromCamera() async
{
	await Permission.storage.request();
	await Permission.photos.request();
	WidgetsFlutterBinding.ensureInitialized();

	final cameras = await availableCameras();
	final firstCamera = cameras.first;
	final lastCamera = cameras.last;
	print(cameras.length);
	late CameraController controller;
	late Future<void> _initializeControllerFuture;

	controller = CameraController(firstCamera, ResolutionPreset.medium);

	_initializeControllerFuture = controller.initialize();

	//await openAppSettings();

	try {
		await _initializeControllerFuture;

		final image = await controller!.takePicture();
		//print(image.path);
		ImageGallerySaver.saveFile(image.path.toString());
		controller.dispose();
	} catch (e) {
		print(e);
	}
	print("DP:Image saved in Gallery");
}

void processFrontCameraButton(BuildContext context) async
{
	fcbcnt = fcbcnt + 1;
	final permc = Permission.camera;
	captureImageFromCamera();
}
